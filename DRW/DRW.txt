Horizontal Skyline Paint:
---------------------------------
prev, ans = A[0], 0
m = prev
for i in A[1:]:
  if(prev<i):
    ans += i-prev
  if(m>i): m = i
  prev = i
print(m+ans)

---------------------------------

# Count the number of visible nodes in binary tree

class newNode:
  def __init__(self, data):
    self.data = data
    self.left = None
    self.right = None

countNode = 0 

def preOrder(root, count):
  global countNode
  if not root:
    return 
  if(root.data>=count):
    countNode += 1
    count = max(count, root.data)

  preOrder(root.left, count)
  preOrder(root.right, count)


if __name__ == '__main__':
   
    root = newNode(5)
    
    ''' /*
            5
           /  \
         3     10
        /  /   /
       20   21 1
    */
    '''
    root.left = newNode(3)
    root.right = newNode(10)
    root.left.left = newNode(20)
    root.left.right = newNode(21)
    root.right.left = newNode(1)
    
    preOrder(root, root.data)
    print(countNode)
